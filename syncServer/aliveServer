#!/usr/bin/python
from twisted.web.server import Site

from twisted.internet import reactor
from twisted.web.resource import Resource
import re
import argparse




class updateAlive(Resource):
  isLeaf = True
  def render(self, request):

    return "<html>UPDATED!</html>"

class kickbutt(Resource):
  isLeaf = True
  def render(self, request):
    return "<html>NOT ALLOWED!</html>"


class listenAlive(Resource):
  def getChild(self, name, request):
    print(request.getClientIP() +" : in getChild : "+ str(name) +" : "+ str(request))
    # print(dir(request))
    print(str(request.getClientIP()) +" : "+ str(request.getAllHeaders()))
    if(re.search('^/ALIVE',str(request.uri))):
      return(updateAlive())
    else:
      return(kickbutt())



  # def render_GET(self,request):
  #   print("----------------------")
  #   print(request.getClientIP() +" : HEADERS")
  #   print("----------------------")
  #   print(request.getClientIP() +" : "+ str(request.getAllHeaders()))
  #   print("----------------------")
    

res = listenAlive()
factory = Site(res)
reactor.listenTCP(80, factory)
reactor.run()